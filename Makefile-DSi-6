.SUFFIXES:
export DEVKITPRO 	:= /opt/devkitpro
export DEVKITARM	:= $(DEVKITPRO)/devkitARM
include $(DEVKITARM)/ds_rules
CC 					:= $(DEVKITARM)/bin/arm-none-eabi-gcc
MACHDEP := -D__NDS__ -DARM9 -D__ARM_ARCH=5 -march=armv5te -mtune=arm946e-s -mthumb -ffunction-sections -fdata-sections
INCLUDES += -I/opt/devkitpro/portlibs/nds/include -I/opt/devkitpro/portlibs/arm-none-eabi/include -I/opt/devkitpro/calico/include \
-I/opt/devkitpro/libnds/include
CFLAGS 	:= -O3 -flto \
$(INCLUDES) $(MACHDEP)
LDFLAGS := $(CFLAGS) \
-specs=/opt/devkitpro/calico/share/ds9.specs \
-Wl,-Map,$(TARGET).map \
-L/opt/devkitpro/portlibs/nds/lib \
-L/opt/devkitpro/portlibs/arm-none-eabi/lib \
-L/opt/devkitpro/calico/lib \
-L/opt/devkitpro/libnds/lib \
-lcurl -lz -lwolfssl -ldswifi9 -lcalico_ds9 -lnds9 -lm
TARGET  := myapp
SRCDIR 	:= dsi-1
C_SOURCES = $(foreach dir, $(SRCDIR), $(wildcard $(dir)/*.c))
SOURCES = $(C_SOURCES) 
OBJECTS = $(SOURCES:.c=.o)

#---------------------------------------------------------------------------------
# Game/App information for ndstool
#---------------------------------------------------------------------------------
GAME_TITLE      := MyApp
GAME_SUBTITLE1  := Built with libcurl
GAME_SUBTITLE2  := devkitARM
#GAME_ICON       := $(CURDIR)/icon.bmp
#---------------------------------------------------------------------------------

all: $(TARGET).nds

# Build ELF
$(TARGET).elf: $(OBJECTS)
	$(CC) $^ -o $@ $(LDFLAGS)

# Package ELF into nds (requires devkitPro tools)
$(TARGET).nds: $(TARGET).elf
	ndstool -c $@ -9 $< \
		-b "$(GAME_TITLE);$(GAME_SUBTITLE1);$(GAME_SUBTITLE2)" \
		-g CURL 0001 \
		-z 80040000 -u 00000000

%.o: %.c
	$(CC) -c $< -o $@ $(CFLAGS)

clean:
	rm -f $(TARGET).elf $(TARGET).nds $(TARGET).map $(OBJECTS)

.PHONY: all clean
