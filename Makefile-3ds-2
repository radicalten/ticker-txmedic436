.SUFFIXES:
export DEVKITPRO 	:= /opt/devkitpro
export DEVKITARM	:= $(DEVKITPRO)/devkitARM
include $(DEVKITARM)/3ds_rules
CC 					:= $(DEVKITARM)/bin/arm-none-eabi-gcc
MACHDEP := -D__3DS__ -march=armv6k -mtune=mpcore -mfloat-abi=hard -mtp=soft -mword-relocations -ffunction-sections
INCLUDES += -I/opt/devkitpro/portlibs/3ds/include -I/opt/devkitpro/portlibs/arm-none-eabi/include -I/opt/devkitpro/libctru/include
CFLAGS 	:= -O3 -flto \
$(INCLUDES) $(MACHDEP)
LDFLAGS := $(CFLAGS) \
-specs=3dsx.specs \
-Wl,-Map,$(notdir $*.map) \
-L/opt/devkitpro/portlibs/3ds/lib \
-L/opt/devkitpro/portlibs/arm-none-eabi/lib \
-L/opt/devkitpro/libctru/lib \
-L/opt/devkitpro/libctru/lib/3ds \
-lcurl -lz -lmbedtls -lmbedcrypto -lmbedx509 -lctru -lm
TARGET  := myapp
SRCDIR 	:= 3ds
C_SOURCES = $(foreach dir, $(SRCDIR), $(wildcard $(dir)/*.c))
SOURCES = $(C_SOURCES) 
OBJECTS = $(SOURCES:.c=.o)


all: $(TARGET).3dsx
$(TARGET).3dsx: $(TARGET).elf
	#$(_3DSXDEPS)

$(TARGET).elf: $(OBJECTS)
	$(CC) $^ -o $@ $(LDFLAGS)

%.o: %.c
	$(CC) -c $< -o $@ $(CFLAGS)

clean:
	rm -f $(TARGET).elf $(TARGET).3dsx $(TARGET).map $(OBJECTS)

.PHONY: clean test
